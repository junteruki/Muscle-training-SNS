【主要サービス】
・GCE(Google Compute Engine)
一般的な仮想マシン提供サービス
ライブマイグレーションによる高い可用性

WindowsからLinuxまで広い範囲のOSが提供されていそう

※プリエンプティブVM
　24時間までしか連続で稼動せず、強制的にシャットダウンされることもある。
　その代わり安い。通常の20％の価格

使用可能なストレージ
　永続でぃすく
　　NW越しに接続する永続ストレージで最大10TB。今は変わった？
　　インスタンスを停止しても残る。

　ローカルSSD
　　仮想マシンにが動くマシンに物理的に接続されたストレージ
　　IOPSが高く、レインテンシも低い。

・GCS(Google Cloud Storage)
　高い可用性と、耐久性を持つ
　世界中にエッジキャッシュがあり、高速に接続可能
　GAE
  GCE
  BigQuery
  Cloud Dateflow
  Cloud Dataproc
　などのデータ処理サービスのバックエンドストレージとして利用可能

　ストレージのタイプ
　　Multi-Rigional
　　　地理的に独立した場所にデータを複製して保存。アクセス頻度が高く、地理的な冗長性が必要な
　　　データに向いている。

　　Regional
　　　単一リージョン内の複数のゾーンにデータを複製して保存。アクセス頻度が高いAPLデータなど。

　　Nearline
　　　つきに一回だけアクセスするなどの、アクセス頻度の低いデータの保存に適した安いストレージ
　　　つきに一回だけ分析する蓄積アーカイブデータなど

　　Coldline
　　　年に一回だけアクセスするようなデータの保存。数年分のアーカイブデータの保存などに適した。

　バケット
　　ファイルを保存するフォルダのようなもの。しかし、階層構造はとれない。プロジェクト内で唯一の
　　名前をつける必要がある。
　オブジェクト
　　バケットに保存するファイルのこと。オブジェクト内で唯一の名前にする必要あり。


・GCS(Google Cloud SQL)
　MySQLをサポートする振るマネージドサービス
　自動バックアアップとポイントインタイムリカバリを提供。
　障害時のフェールオーバー
　CSVによるデータのインポート/エクスポート
　

・GCPによる３層WEBアーキテクチャの実現方法
＜独自のカスタマイズが必要な場合＞
　DBの要件やミドルウェアに独自の設定を加える場合は、GCEの仮想インスタンスにミドルを手動インスト　　一番、GCPの恩恵をうけない。

＜DBの運用不可を減らしたい場合＞
　GCE＋WEBアプリケーションサーバ
　永続データはCloud SQL

＜データを効率よく管理する場合＞
　GCE+WEBアプリケーションサーバ
　Cloud SQL + Cloud Strage
　様々種類のデータを取り扱う際には、大きなサイズのデータをCloud Strageで管理する。

＜高い拡張性を実現する場合＞
　GKEによるDockerコンテナ + WEBアプリケーションサーバ
　Cloud Datastore による永続データの保存
　オンラインゲームやソシャゲなどアクセスの急増があるサービスにはシステム規模を柔軟に変更できる
　コンテナの利用がよい

＜短期間で新規システムを開発し、運用にコストを掛けない場合＞
　Google App Engineの使用(Paas)
　Webサーバ/DBサーバ/メモリキャッシュサービス/タスクキューなど標準装備
　新規開発ならこれがおすすめ。インフラを持たなくて良いから。
　内部はコンテナで開発可能な言語はPython/Java/Go/PHP


・サンプルアプリの開発
　＜要件＞
　①ユーザ名とメッセージを書き込むことができる掲示板を考える。
　②言語はPythonでGCEを用いて、Pythonの実行環境を整える
　③掲示板には書き込まれたデータや画像など複数のデータの種類がある。
　　⇒GCE/Cloud SQL/Cloud Strageを使用してみる










